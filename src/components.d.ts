/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface MfxPlayer {}
  interface MfxPlayerAttributes extends StencilHTMLAttributes {
    'onMfxPlayerInit'?: (event: CustomEvent) => void;
  }

  interface MfxTimeline {
    'handler': string;
  }
  interface MfxTimelineAttributes extends StencilHTMLAttributes {
    'handler'?: string;
    'onMfxTimelineInit'?: (event: CustomEvent) => void;
    'onMfxTimelineRender'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MfxPlayer': Components.MfxPlayer;
    'MfxTimeline': Components.MfxTimeline;
  }

  interface StencilIntrinsicElements {
    'mfx-player': Components.MfxPlayerAttributes;
    'mfx-timeline': Components.MfxTimelineAttributes;
  }


  interface HTMLMfxPlayerElement extends Components.MfxPlayer, HTMLStencilElement {}
  var HTMLMfxPlayerElement: {
    prototype: HTMLMfxPlayerElement;
    new (): HTMLMfxPlayerElement;
  };

  interface HTMLMfxTimelineElement extends Components.MfxTimeline, HTMLStencilElement {}
  var HTMLMfxTimelineElement: {
    prototype: HTMLMfxTimelineElement;
    new (): HTMLMfxTimelineElement;
  };

  interface HTMLElementTagNameMap {
    'mfx-player': HTMLMfxPlayerElement
    'mfx-timeline': HTMLMfxTimelineElement
  }

  interface ElementTagNameMap {
    'mfx-player': HTMLMfxPlayerElement;
    'mfx-timeline': HTMLMfxTimelineElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
